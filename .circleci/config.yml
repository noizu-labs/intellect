# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

commands:
  build_deps:
    steps:
      - run:
          name: "Install YAML Development Packages"
          command: |
            sudo apt-get update
            sudo apt-get install -y libyaml-dev
      - restore_cache:
          keys:
            - deps-{{ checksum "mix.lock" }}-v2
            - deps-{{ checksum "mix.lock" }}
      - run:
          name: "deps get"
          command: |
            set +e
            mix deps.get
            set -e
      - run:
          name: "deps compile"
          command: |
            set +e
            mix deps.compile
            set -e
      - run:
          name: "deps compile"
          command: |
            set +e
            MIX_ENV=test mix deps.compile
            set -e
      - save_cache:
          key: deps-{{ checksum "mix.lock" }}-v2
          paths:
            - _build
            - deps
  refresh_hex:
    steps:
      - run:
          name: hex update
          command: mix local.hex --force
      - run:
          name: hex update
          command: mix local.rebar --force
  checkout_and_init:
    steps:
      - checkout
      - run:
          name: "submodule init"
          command: "git submodule init; git submodule update;"
      - run:
          name: "elixir-framework init"
          command: "cd ~/repo/elixir-framework; git submodule init; git submodule update; cd ~/repo;"

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs
jobs:
  build:
    # Specify the execution environment. You can specify an image from Docker Hub or use one of our convenience images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/configuration-reference/#executor-job
    docker:
      - image: cimg/elixir:1.14.4
      - image: cimg/redis:6.2.6
      - image: "timescale/timescaledb-ha:pg15-latest"
        environment:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: noizu_intellect
    working_directory: ~/repo
    # Add steps to the job
    # See: https://circleci.com/docs/configuration-reference/#steps
    steps:
      - checkout_and_init
      - setup_remote_docker:
          docker_layer_caching: true
      - refresh_hex
      - build_deps
      - run:
          name: Prepare Database
          command: mix ecto.migrate
      - run:
          name: Test Suite
          command: mix test --cover && cp ~/repo/_build/test/lib/noizu_intellect/results.xml ~/repo/results.xml
      - store_artifacts:
          path: /home/circleci/repo/results.xml
      - store_test_results:
          path: /home/circleci/repo/results.xml

# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build:
    jobs:
      - build:
          context:
            - the-robot-lives
