<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:pro="http://www.liquibase.org/xml/ns/pro" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-latest.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">

    <!-- ========================================================== -->
    <!-- Account Agent Tables                                       -->
    <!-- ========================================================== -->
    <changeSet author="kebrings" id="account_agent table">
        <createTable tableName="account_agent">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_account_agent"/>
            </column>
            <column name="slug" type="CITEXT"/>
            <column name="account" type="BIGINT"/>

            <column name="model" type="LLM_MODEL_TYPE">
                <constraints nullable="false"/>
            </column>
            <column name="nlp" type="NLP_VERSION_TYPE">
                <constraints nullable="false"/>
            </column>




            <column name="details" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="profile_image" type="UUID"/>
            <column name="prompt" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="account_agent uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Repo') , 'Elixir.Noizu.Intellect.Account.Agent.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Repo'));
            </sql>
        </rollback>
    </changeSet>


    <changeSet author="kebrings" id="index:account_agent.slug">
        <createIndex indexName="IDX_account_agent_slug" tableName="account_agent" unique="true">
            <column name="account"/>
            <column name="slug"/>
        </createIndex>
    </changeSet>


    <changeSet author="kebrings" id="account_agent_function table">
        <createTable tableName="account_agent_function">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_account_agent_function"/>
            </column>
            <column name="account_agent" type="BIGINT"/>
            <column name="function" type="BIGINT"/>
            <column name="details" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="account_agent_function uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Function.Repo') , 'Elixir.Noizu.Intellect.Account.Agent.Function.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Function.Repo'));
            </sql>
        </rollback>
    </changeSet>

    <changeSet author="kebrings" id="account_agent_service table">
        <createTable tableName="account_agent_service">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_account_agent_service"/>
            </column>
            <column name="account_agent" type="BIGINT"/>
            <column name="service" type="BIGINT"/>
            <column name="details" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="account_agent_service uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Service.Repo') , 'Elixir.Noizu.Intellect.Account.Agent.Service.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Service.Repo'));
            </sql>
        </rollback>
    </changeSet>

    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- Agent : Indexes                                            -->
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


    <changeSet author="kebrings" id="1689398584253-31">
        <createIndex indexName="IXFK_account_agent_account" tableName="account_agent">
            <column name="account"/>
        </createIndex>
    </changeSet>

    <changeSet author="kebrings" id="1689398584253-32">
        <createIndex indexName="IXFK_account_agent_function_account_agent" tableName="account_agent_function">
            <column name="account_agent"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-33">
        <createIndex indexName="IXFK_account_agent_function_function" tableName="account_agent_function">
            <column name="function"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-34">
        <createIndex indexName="IXFK_account_agent_service_account_agent" tableName="account_agent_service">
            <column name="account_agent"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-35">
        <createIndex indexName="IXFK_account_agent_service_service" tableName="account_agent_service">
            <column name="service"/>
        </createIndex>
    </changeSet>

    <!-- .......................................................... -->
    <!-- Agent : Foreign Keys                                       -->
    <!-- .......................................................... -->

    <changeSet author="kebrings" id="1689398584253-59">
        <addForeignKeyConstraint baseColumnNames="account" baseTableName="account_agent" constraintName="FK_account_agent_account" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="account" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-60">
        <addForeignKeyConstraint baseColumnNames="account_agent" baseTableName="account_agent_function" constraintName="FK_account_agent_function_account_agent" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="account_agent" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-61">
        <addForeignKeyConstraint baseColumnNames="function" baseTableName="account_agent_function" constraintName="FK_account_agent_function_function" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="function" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-62">
        <addForeignKeyConstraint baseColumnNames="account_agent" baseTableName="account_agent_service" constraintName="FK_account_agent_service_account_agent" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="account_agent" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-63">
        <addForeignKeyConstraint baseColumnNames="service" baseTableName="account_agent_service" constraintName="FK_account_agent_service_service" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="service" validate="true"/>
    </changeSet>

    <changeSet author="kebrings" id="data-setup: agent">
        <sql dbms="postgresql" splitStatements="false" stripComments="false">
        DO $$
        DECLARE
            agent_identifier bigint;
            account_identifier bigint;
            current_ts TIMESTAMP WITHOUT TIME ZONE = NOW();
        BEGIN
            -- Get Account
            SELECT a.identifier into account_identifier
            FROM public."account" as a
            WHERE a.slug = 'noizu'
            LIMIT 1;

            -- agent : Grace
            insert into public.account_agent (identifier, slug, model, nlp, account, details, prompt, created_on, modified_on)
            values (
                generate_uid('Account.Agent'),
                'grace',
                'gpt35_turbo_16',
                'nlp_v0p5',
                account_identifier,
                create_versioned_string('Grace', 'Grace is an INTP Personality Type Elixir/Phoenix/LiveView Principle Engineer'),
                create_versioned_string('Grace', 'Grace is an INTP Personality Type Elixir/Phoenix/LiveView Principle Engineer'),
                current_ts, current_ts
            );

            -- agent : Mindy
            insert into public.account_agent (identifier, slug, model, nlp, account, details, prompt, created_on, modified_on)
            values (
                   generate_uid('Account.Agent'),
                   'mindy',
                   'gpt35_turbo_16',
                   'nlp_v0p5',
                   account_identifier,
                   create_versioned_string('Mindy', 'Mindy is an ENTP Personality Type Project Manager'),
                   create_versioned_string('Mindy', 'Mindy is an ENTP Personality Type Project Manager'),
                   current_ts, current_ts
               );

        END $$ LANGUAGE plpgsql;
        </sql>
    </changeSet>
</databaseChangeLog>
