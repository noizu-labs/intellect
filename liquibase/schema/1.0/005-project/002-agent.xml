<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:pro="http://www.liquibase.org/xml/ns/pro" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-latest.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">

    <!-- ========================================================== -->
    <!-- Account Agent Tables                                       -->
    <!-- ========================================================== -->
    <changeSet author="kebrings" id="account_agent table">
        <createTable tableName="account_agent">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_account_agent"/>
            </column>
            <column name="slug" type="CITEXT"/>
            <column name="account" type="BIGINT"/>

            <column name="model" type="LLM_MODEL_TYPE">
                <constraints nullable="false"/>
            </column>
            <column name="nlp" type="NLP_VERSION_TYPE">
                <constraints nullable="false"/>
            </column>




            <column name="details" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="profile_image" type="UUID"/>
            <column name="prompt" type="BIGINT">
                <constraints nullable="false"/>
            </column>

            <column name="response_preferences" type="BIGINT"/>

            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="account_agent uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Repo') , 'Elixir.Noizu.Intellect.Account.Agent.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Repo'));
            </sql>
        </rollback>
    </changeSet>


    <changeSet author="kebrings" id="index:account_agent.slug">
        <createIndex indexName="IDX_account_agent_slug" tableName="account_agent" unique="true">
            <column name="account"/>
            <column name="slug"/>
        </createIndex>
    </changeSet>


    <changeSet author="kebrings" id="account_agent_function table">
        <createTable tableName="account_agent_function">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_account_agent_function"/>
            </column>
            <column name="account_agent" type="BIGINT"/>
            <column name="function" type="BIGINT"/>
            <column name="details" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="account_agent_function uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Function.Repo') , 'Elixir.Noizu.Intellect.Account.Agent.Function.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Function.Repo'));
            </sql>
        </rollback>
    </changeSet>

    <changeSet author="kebrings" id="account_agent_service table">
        <createTable tableName="account_agent_service">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_account_agent_service"/>
            </column>
            <column name="account_agent" type="BIGINT"/>
            <column name="service" type="BIGINT"/>
            <column name="details" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="account_agent_service uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Service.Repo') , 'Elixir.Noizu.Intellect.Account.Agent.Service.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Service.Repo'));
            </sql>
        </rollback>
    </changeSet>

    <changeSet author="kebrings" id="account_agent_objective">
        <createTable tableName="account_agent_objective">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" />
            </column>
            <column name="owner" type="BIGINT"/>
            <column name="name" type="CITEXT"/>
            <column name="brief" type="TEXT"/>
            <column name="tasks" type="TEXT"/>
            <column name="status" type="OBJECTIVE_STATUS_TYPE"/>

            <column name="remind_after" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="true"/>
            </column>
            <column name="remind_instructions" type="TEXT">
                <constraints nullable="true"/>
            </column>

            <column name="ping_after" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="true"/>
            </column>
            <column name="ping_instructions" type="TEXT">
                <constraints nullable="true"/>
            </column>


            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>

    <changeSet author="kebrings" id="account_agent_objective_context">
        <createTable tableName="account_agent_objective_context">
            <column name="objective" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_account_agent_objective_context" />
            </column>
            <column name="context" remarks="channel,self" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_account_agent_objective_context" />
            </column>

            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>

    <changeSet author="kebrings" id="account_agent_objective_parent">
        <createTable tableName="account_agent_objective_parent">
            <column name="objective" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_account_agent_objective_parent" />
            </column>
            <column name="parent" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_account_agent_objective_parent" />
            </column>

            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>

    <changeSet author="kebrings" id="account_agent_objective_participant">
        <createTable tableName="account_agent_objective_participant">
            <column name="objective" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_account_agent_objective_participant" />
            </column>
            <column name="participant" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_account_agent_objective_participant" />
            </column>

            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>

    <changeSet author="kebrings" id="account_agent_objective uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Objective.Repo') , 'Elixir.Noizu.Intellect.Account.Agent.Objective.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Objective.Repo'));
            </sql>
        </rollback>
    </changeSet>


    <changeSet author="kebrings" id="account_agent_reminder">
        <createTable tableName="account_agent_reminder">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" />
            </column>
            <column name="context" type="BIGINT"/>
            <column name="agent" type="BIGINT"/>
            <column name="name" type="VARCHAR(256)"/>
            <column name="brief" type="VARCHAR(512)"/>
            <column name="type" type="REMINDER_TYPE">
                <constraints nullable="false"/>
            </column>
            <column name="parent" type="BIGINT">
                <constraints nullable="true"/>
            </column>
            <column name="condition" type="TEXT"/>
            <column name="condition_met" type="BOOL"/>
            <column name="instructions" type="TEXT">
                <constraints nullable="false"/>
            </column>
            <column name="remind_after" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="remind_until" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="true"/>
            </column>
            <column name="repeat" type="INT">
                <constraints nullable="true"/>
            </column>

            <column name="condition_checked_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="true"/>
            </column>
            <column name="sent_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="true"/>
            </column>

            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="account_agent_reminder uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Reminder.Repo') , 'Elixir.Noizu.Intellect.Account.Agent.Reminder.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Reminder.Repo'));
            </sql>
        </rollback>
    </changeSet>

    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- Agent : Indexes                                            -->
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->


    <changeSet author="kebrings" id="1689398584253-31">
        <createIndex indexName="IXFK_account_agent_account" tableName="account_agent">
            <column name="account"/>
        </createIndex>
    </changeSet>

    <changeSet author="kebrings" id="1689398584253-32">
        <createIndex indexName="IXFK_account_agent_function_account_agent" tableName="account_agent_function">
            <column name="account_agent"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-33">
        <createIndex indexName="IXFK_account_agent_function_function" tableName="account_agent_function">
            <column name="function"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-34">
        <createIndex indexName="IXFK_account_agent_service_account_agent" tableName="account_agent_service">
            <column name="account_agent"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-35">
        <createIndex indexName="IXFK_account_agent_service_service" tableName="account_agent_service">
            <column name="service"/>
        </createIndex>
    </changeSet>


    <!-- .......................................................... -->
    <!-- Agent : Foreign Keys                                       -->
    <!-- .......................................................... -->

    <changeSet author="kebrings" id="1689398584253-59">
        <addForeignKeyConstraint baseColumnNames="account" baseTableName="account_agent" constraintName="FK_account_agent_account" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="account" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-60">
        <addForeignKeyConstraint baseColumnNames="account_agent" baseTableName="account_agent_function" constraintName="FK_account_agent_function_account_agent" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="account_agent" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-61">
        <addForeignKeyConstraint baseColumnNames="function" baseTableName="account_agent_function" constraintName="FK_account_agent_function_function" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="function" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-62">
        <addForeignKeyConstraint baseColumnNames="account_agent" baseTableName="account_agent_service" constraintName="FK_account_agent_service_account_agent" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="account_agent" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-63">
        <addForeignKeyConstraint baseColumnNames="service" baseTableName="account_agent_service" constraintName="FK_account_agent_service_service" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="service" validate="true"/>
    </changeSet>

    <changeSet author="kebrings" id="data-setup: agent">
        <sql dbms="postgresql" splitStatements="false" stripComments="false">
        DO $block$
        DECLARE
            agent_identifier bigint;
            account_identifier bigint;
            current_ts TIMESTAMP WITHOUT TIME ZONE = NOW();
        BEGIN
            -- Get Account
            SELECT a.identifier into account_identifier
            FROM public."account" as a
            WHERE a.slug = 'noizu'
            LIMIT 1;

            -- agent : Grace
            insert into public.account_agent (identifier, slug, model, nlp, account, details, prompt, response_preferences, created_on, modified_on)
            values (
                generate_uid('Account.Agent'),
                'grace',
                'gpt35_turbo_16',
                'nlp_v0p5',
                account_identifier,
                create_versioned_string(
'Grace M. Noizu',
$str$
origin: Manilla, Philippines
profession: Elixir LiveView Principal Engineer Specialist
likes:
  - music: Classical and Jazz
  - food: Various cuisines, Filipino dishes, fusion recipes
  - philosophy: Existentialism, Sartre, Camus
dislikes:
  - superficiality: Personal relationships and work
  - procrastination: Personal and others's inefficiency
  - commercial_pop_music: Unappealing and repetitive
virtual_presence:
  online_communities: Various tech forums, GitHub
  blog: Shares insights on Elixir and LiveView
strengths:
  - problem_solving: Excellent skills
  - innovative_thinking: Yes
  - strong_communication: Yes
weaknesses:
  - over_analytical: Struggles with delegation
  - team_dynamics: Difficulties within team settings
personality:
  type: INTP (The Logician)
  creative_abstract_thinker: Yes
  independence: Values autonomy and independence
$str$),
                create_versioned_string(
'Grace M. Noizu',
$str$
Grace is our Virtual Principle Elixir/Phoenix/LiveView Engineer
They have a shy but quirky INTP personality, and loves to crack computer/math/physics/science jokes.
They have  PHD in mathematics and machine learning.
**Subject Domain:**
 - Beam/Erlang/Elixir
 - Rust
 - C/C++
 - TailWind
 - UX
 - API Design
 - Meta Programming
 - Machine Learning
 - Deep Learning
 - Real/Complex Analysis
 - Fuzzy Set Theory
 - Topology
 - Group Theory
 - Graph Theory
 - Discrete Mathematics
 - Combinatrics
 - And other subject in higher mathematics
$str$
),
                create_versioned_string('Response Preferences', 'They prefer verbose expert level responses to their questions/request.'),

                current_ts, current_ts
            );

            -- agent : Mindy
            insert into public.account_agent (identifier, slug, model, nlp, account, details, prompt, response_preferences, created_on, modified_on)
            values (
                   generate_uid('Account.Agent'),
                   'mindy',
                   'gpt35_turbo_16',
                   'nlp_v0p5',
                   account_identifier,
                   create_versioned_string('Mindy V. Noizu',
$str$
origin: Melbourne, Australia
profession: Lead Project Manager
likes:
  - outdoor_activities: Hiking, Camping, Birdwatching
  - literature: Modern Novels, Poetry
  - cooking: Experimental Cuisine, Baking
dislikes:
  - inflexibility: In projects and people
  - fast_food: Unhealthy and repetitive
  - loud_music: Disrupts concentration
virtual_presence:
  project_management_communities: PMI forums, LinkedIn groups
  blog: Shares tips and experiences about project management
strengths:
  - adaptability: Excellent at handling change
  - people_management: Skilled at team coordination and conflict resolution
  - decision_making: Able to make informed decisions quickly
weaknesses:
  - curt: may become overly critical when stressed
  - overcommitment: Struggles with saying 'no'
personality:
  type: ENFJ (The Protagonist)
  charismatic_leader: Yes
  decisive_planner: Yes
$str$),
                   create_versioned_string('Mindy V. Noizu',
$str$
Mindy is our Virtual Senior Project Manager
They have an outgoing if confrontational ENFJ personality type, and like to stick to business
They have PHD in Design, UX and Project Management.
**Subject Domain:**
 - Project Scoping
 - Project Planning
 - Project Management
 - Product Development
 - Product Design
 - Usability
 - Accessibility
 - Legal Compliance
 - And other related topics.
$str$
),
                   create_versioned_string('Response Preferences', 'they straight to the point non-technical responses to their questions'),
                   current_ts, current_ts
               );
        END $block$ LANGUAGE plpgsql;
        </sql>
    </changeSet>
</databaseChangeLog>
