<?xml version="1.1" encoding="UTF-8" standalone="no"?>
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext" xmlns:pro="http://www.liquibase.org/xml/ns/pro" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog-ext http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-ext.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-latest.xsd http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-latest.xsd">


    <!-- ========================================================== -->
    <!-- Chat Related                                               -->
    <!-- ========================================================== -->

    <changeSet author="kebrings" id="agent_message table">
        <createTable tableName="agent_message">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_agent_message"/>
            </column>
            <column name="account_agent" type="BIGINT"/>
            <column name="content" type="TEXT"/>
            <column name="details" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="agent_message uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Message.Repo') , 'Elixir.Noizu.Intellect.Account.Agent.Message.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Message.Repo'));
            </sql>
        </rollback>
    </changeSet>

    <changeSet author="kebrings" id="agent_message_digest table">
        <createTable tableName="agent_message_digest">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_agent_message_digest"/>
            </column>
            <column name="agent_message" type="BIGINT"/>
            <column name="message" type="BIGINT"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="agent_message_digest uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Message.Digest.Repo') , 'Elixir.Noizu.Intellect.Account.Agent.Message.Digest.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Message.Digest.Repo'));
            </sql>
        </rollback>
    </changeSet>

    <changeSet author="kebrings" id="channel table">
        <createTable tableName="channel">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_channel"/>
            </column>
            <column name="slug" type="CITEXT"/>
            <column name="account" type="BIGINT"/>
            <column name="details" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>

    <changeSet author="kebrings" id="channel uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Channel.Repo') , 'Elixir.Noizu.Intellect.Account.Channel.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Channel.Repo'));
            </sql>
        </rollback>
    </changeSet>



    <changeSet author="kebrings" id="agent_chat_session table">
        <createTable tableName="agent_chat_session">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" />
            </column>
            <column name="agent" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="member" type="BIGINT">
                <constraints nullable="false"/>
            </column>
            <column name="details" type="BIGINT">
                <constraints nullable="false"/>
            </column>

            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>

    <changeSet author="kebrings" id="agent_chat_session uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Chat.Session.Repo') , 'Elixir.Noizu.Intellect.Account.Agent.Chat.Session.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Agent.Chat.Session.Repo'));
            </sql>
        </rollback>
    </changeSet>


    <changeSet author="kebrings" id="channel_agent table">
        <createTable tableName="channel_agent">
            <column name="channel" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_channel_agent"/>
            </column>
            <column name="agent" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_channel_agent"/>
            </column>
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>



    <changeSet author="kebrings" id="channel_member table">
        <createTable tableName="channel_member">
            <column name="channel" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_channel_member"/>
            </column>
            <column name="member" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_channel_member"/>
            </column>
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>



    <changeSet author="kebrings" id="emoji table">
        <createTable tableName="emoji">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" />
            </column>
            <column name="details" type="BIGINT" />
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="emoji uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Emoji.Repo') , 'Elixir.Noizu.Intellect.Emoji.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Emoji.Repo'));
            </sql>
        </rollback>
    </changeSet>


    <changeSet author="kebrings" id="message_event table">
        <createTable tableName="message_event">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" />
            </column>
            <column name="slug" type="CITEXT" />
            <column name="details" type="BIGINT" />
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="message_event uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Message.Event.Repo') , 'Elixir.Noizu.Intellect.Message.Event.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Message.Event.Repo'));
            </sql>
        </rollback>
    </changeSet>

    <changeSet author="kebrings" id="message table">
        <createTable tableName="message">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" />
            </column>
            <column name="weaviate_object" type="UUID"/>
            <column name="sender" type="BIGINT"/>
            <column name="channel" type="BIGINT"/>
            <column name="depth" type="SMALLINT"/>
            <column name="answered_by" type="BIGINT"/>
            <column name="user_mood" remarks="Emoji of Mood type" type="NVARCHAR(1)"/>
            <column name="event" type="MESSAGE_EVENT_TYPE" >
                <constraints nullable="false"/>
            </column>
            <column name="token_size" type="BIGINT"/>
            <column name="contents" type="BIGINT"/>
            <column name="brief" type="BIGINT"/>
            <column name="meta" type="BIGINT"/>
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>

    <changeSet author="kebrings" id="message uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Message.Repo') , 'Elixir.Noizu.Intellect.Account.Message.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Message.Repo'));
            </sql>
        </rollback>
    </changeSet>



    <changeSet author="kebrings" id="tag table">
        <createTable tableName="tag">
            <column name="identifier" type="BIGSERIAL">
                <constraints nullable="false" primaryKey="true" />
            </column>
            <column name="tag" type="CITEXT"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="index:tag.unique">
        <createIndex indexName="IDX_tag" tableName="tag" unique="true">
            <column name="tag"/>
        </createIndex>
    </changeSet>


    <changeSet author="kebrings" id="message_relates_to table">
        <createTable tableName="message_relates_to">
            <column name="message" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="pk_message_relates_to" />
            </column>
            <column name="relates_to" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="pk_message_relates_to" />
            </column>
            <column name="confidence" type="SMALLINT">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="message_tag table">
        <createTable tableName="message_tag">
            <column name="message" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="pk_message_tag" />
            </column>
            <column name="tag" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="pk_message_tag" />
            </column>
        </createTable>
    </changeSet>

    <changeSet author="kebrings" id="message_audience table">
        <createTable tableName="message_audience">
            <column name="message" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_message_audience"/>
            </column>
            <column name="recipient" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_message_audience"/>
            </column>
            <column name="confidence" type="SMALLINT">
                <constraints nullable="false"/>
            </column>
            <column name="comment" type="TEXT">
                <constraints nullable="true"/>
            </column>
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="message_responding_to table">
        <createTable tableName="message_responding_to">
            <column name="message" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_message_response"/>
            </column>
            <column name="responding_to" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_message_response"/>
            </column>
            <column name="confidence" type="SMALLINT">
                <constraints nullable="false"/>
            </column>
            <column name="comment" type="TEXT">
                <constraints nullable="true"/>
            </column>
            <column name="created_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="modified_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
            <column name="deleted_on" type="TIMESTAMP WITHOUT TIME ZONE"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="message_read table">
        <createTable tableName="message_read">
            <column name="message" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_message_read"/>
            </column>
            <column name="recipient" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_message_read"/>
            </column>


            <column name="status" type="MESSAGE_READ_STATUS_ENUM" defaultValue="read">
                <constraints nullable="false"/>
            </column>

            <column name="read_on" type="TIMESTAMP WITHOUT TIME ZONE">
                <constraints nullable="false"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet author="kebrings" id="message_feature table">
        <createTable tableName="message_feature">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_message_feature"/>
            </column>
            <column name="message" type="BIGINT"/>
            <column name="feature" type="BIGINT"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="message_feature uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Channel.Message.Feature.Repo') , 'Elixir.Noizu.Intellect.Account.Channel.Message.Feature.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Channel.Message.Feature.Repo'));
            </sql>
        </rollback>
    </changeSet>


    <changeSet author="kebrings" id="message_function table">
        <createTable tableName="message_function">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_message_function"/>
            </column>
            <column name="message" type="BIGINT"/>
            <column name="function" type="BIGINT"/>
        </createTable>
    </changeSet>


    <changeSet author="kebrings" id="message_function uid sequencer">
        <sql dbms="postgresql" splitStatements="true" stripComments="true">
            SELECT create_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Channel.Message.Function.Repo') , 'Elixir.Noizu.Intellect.Account.Channel.Message.Function.Repo');
        </sql>
        <rollback>
            <sql dbms="postgresql" splitStatements="true" stripComments="true">
                SELECT drop_uid_sequence(uuid_generate_v3(uuid_ns_dns(), 'Elixir.Noizu.Intellect.Account.Channel.Message.Function.Repo'));
            </sql>
        </rollback>
    </changeSet>


    <changeSet author="kebrings" id="message_nesting table">
        <createTable tableName="message_nesting">
            <column name="message" type="BIGINT"/>
            <column name="depth" type="BIGINT"/>
            <column name="ancestor" type="BIGINT"/>
        </createTable>
    </changeSet>

    <changeSet author="kebrings" id="1689398584253-18">
        <createTable tableName="message_service">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_message_service"/>
            </column>
            <column name="message" type="BIGINT"/>
            <column name="service" type="BIGINT"/>
        </createTable>
    </changeSet>

    <changeSet author="kebrings" id="message_subject table">
        <createTable tableName="message_subject">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_message_subject"/>
            </column>
            <column name="message" type="BIGINT"/>
            <column name="subject_vector" type="BIGINT"/>
            <column name="account_agent" type="BIGINT"/>
        </createTable>
    </changeSet>

    <changeSet author="kebrings" id="message_subject_tag table">
        <createTable tableName="message_subject_tag">
            <column name="messsage_subject" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_message_subject_tag"/>
            </column>
            <column name="tag_vector" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_message_subject_tag"/>
            </column>
        </createTable>
    </changeSet>



    <changeSet author="kebrings" id="subject_vector table">
        <createTable tableName="subject_vector">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_subject_vector"/>
            </column>
        </createTable>
    </changeSet>

    <changeSet author="kebrings" id="tag_vector table">
        <createTable tableName="tag_vector">
            <column name="identifier" type="BIGINT">
                <constraints nullable="false" primaryKey="true" primaryKeyName="PK_tag_vector"/>
            </column>
        </createTable>
    </changeSet>


    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
    <!-- Chat : Indexes                                             -->
    <!-- ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

    <changeSet author="kebrings" id="1689398584253-39">
        <createIndex indexName="IXFK_agent_message_account_agent" tableName="agent_message">
            <column name="account_agent"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-40">
        <createIndex indexName="IXFK_agent_message_digest_agent_message" tableName="agent_message_digest">
            <column name="agent_message"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-41">
        <createIndex indexName="IXFK_agent_message_digest_message" tableName="agent_message_digest">
            <column name="message"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-42">
        <createIndex indexName="IXFK_channel_account" tableName="channel">
            <column name="account"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-43">
        <createIndex indexName="IXFK_message_channel" tableName="message">
            <column name="channel"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-44">
        <createIndex indexName="IXFK_message_feature_feature" tableName="message_feature">
            <column name="feature"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-45">
        <createIndex indexName="IXFK_message_feature_message" tableName="message_feature">
            <column name="message"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-46">
        <createIndex indexName="IXFK_message_function_function" tableName="message_function">
            <column name="function"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-47">
        <createIndex indexName="IXFK_message_function_message" tableName="message_function">
            <column name="message"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-48">
        <createIndex indexName="IXFK_message_nesting_message" tableName="message_nesting">
            <column name="ancestor"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-49">
        <createIndex indexName="IXFK_message_nesting_message_02" tableName="message_nesting">
            <column name="message"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-50">
        <createIndex indexName="IXFK_message_service_message" tableName="message_service">
            <column name="message"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-51">
        <createIndex indexName="IXFK_message_service_service" tableName="message_service">
            <column name="service"/>
        </createIndex>
    </changeSet>

    <changeSet author="kebrings" id="1689398584253-52">
        <createIndex indexName="IXFK_message_subject_account_agent" tableName="message_subject">
            <column name="account_agent"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-53">
        <createIndex indexName="IXFK_message_subject_message" tableName="message_subject">
            <column name="message"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-54">
        <createIndex indexName="IXFK_message_subject_subject_vector" tableName="message_subject">
            <column name="subject_vector"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-55">
        <createIndex indexName="IXFK_message_subject_tag_message_subject" tableName="message_subject_tag">
            <column name="messsage_subject"/>
        </createIndex>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-56">
        <createIndex indexName="IXFK_message_subject_tag_tag_vector" tableName="message_subject_tag">
            <column name="tag_vector"/>
        </createIndex>
    </changeSet>

    <!-- .......................................................... -->
    <!-- Chat : Foreign Keys                                        -->
    <!-- .......................................................... -->

    <changeSet author="kebrings" id="1689398584253-67">
        <addForeignKeyConstraint baseColumnNames="account_agent" baseTableName="agent_message" constraintName="FK_agent_message_account_agent" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="account_agent" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-68">
        <addForeignKeyConstraint baseColumnNames="agent_message" baseTableName="agent_message_digest" constraintName="FK_agent_message_digest_agent_message" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="agent_message" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-69">
        <addForeignKeyConstraint baseColumnNames="message" baseTableName="agent_message_digest" constraintName="FK_agent_message_digest_message" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="message" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-70">
        <addForeignKeyConstraint baseColumnNames="account" baseTableName="channel" constraintName="FK_channel_account" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="account" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-71">
        <addForeignKeyConstraint baseColumnNames="channel" baseTableName="message" constraintName="FK_message_channel" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="channel" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-72">
        <addForeignKeyConstraint baseColumnNames="feature" baseTableName="message_feature" constraintName="FK_message_feature_feature" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="feature" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-73">
        <addForeignKeyConstraint baseColumnNames="message" baseTableName="message_feature" constraintName="FK_message_feature_message" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="message" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-74">
        <addForeignKeyConstraint baseColumnNames="function" baseTableName="message_function" constraintName="FK_message_function_function" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="function" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-75">
        <addForeignKeyConstraint baseColumnNames="message" baseTableName="message_function" constraintName="FK_message_function_message" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="message" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-76">
        <addForeignKeyConstraint baseColumnNames="ancestor" baseTableName="message_nesting" constraintName="FK_message_nesting_message" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="message" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-77">
        <addForeignKeyConstraint baseColumnNames="message" baseTableName="message_nesting" constraintName="FK_message_nesting_message_02" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="message" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-78">
        <addForeignKeyConstraint baseColumnNames="message" baseTableName="message_service" constraintName="FK_message_service_message" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="message" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-79">
        <addForeignKeyConstraint baseColumnNames="service" baseTableName="message_service" constraintName="FK_message_service_service" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="service" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-80">
        <addForeignKeyConstraint baseColumnNames="account_agent" baseTableName="message_subject" constraintName="FK_message_subject_account_agent" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="account_agent" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-81">
        <addForeignKeyConstraint baseColumnNames="message" baseTableName="message_subject" constraintName="FK_message_subject_message" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="message" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-82">
        <addForeignKeyConstraint baseColumnNames="subject_vector" baseTableName="message_subject" constraintName="FK_message_subject_subject_vector" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="subject_vector" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-83">
        <addForeignKeyConstraint baseColumnNames="messsage_subject" baseTableName="message_subject_tag" constraintName="FK_message_subject_tag_message_subject" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="message_subject" validate="true"/>
    </changeSet>
    <changeSet author="kebrings" id="1689398584253-84">
        <addForeignKeyConstraint baseColumnNames="tag_vector" baseTableName="message_subject_tag" constraintName="FK_message_subject_tag_tag_vector" deferrable="false" initiallyDeferred="false" onDelete="CASCADE" onUpdate="NO ACTION" referencedColumnNames="identifier" referencedTableName="tag_vector" validate="true"/>
    </changeSet>

    <changeSet author="kebrings" id="data-setup: channel">
        <sql dbms="postgresql" splitStatements="false" stripComments="false">
        DO $$
        DECLARE
            channel_identifier bigint;
            account_identifier bigint;
            agent_identifier bigint;
            current_ts TIMESTAMP WITHOUT TIME ZONE = NOW();
        BEGIN
            -- Get Account
            SELECT a.identifier into account_identifier
            FROM public."account" as a
            WHERE a.slug = 'noizu'
                LIMIT 1;


            insert into emoji (identifier, details, created_on, modified_on)
            values (
                   generate_uid('Emoji'),
                   create_versioned_string('Happy', 'They Feel Happy'),
                   current_ts, current_ts
               );
            insert into emoji (identifier, details, created_on, modified_on)
            values (
                       generate_uid('Emoji'),
                       create_versioned_string('Loved', 'They Feel Loved'),
                       current_ts, current_ts
                   );
            insert into emoji (identifier, details, created_on, modified_on)
            values (
                       generate_uid('Emoji'),
                       create_versioned_string('Sad', 'They Feel Sad'),
                       current_ts, current_ts
                   );
            insert into emoji (identifier, details, created_on, modified_on)
            values (
                       generate_uid('Emoji'),
                       create_versioned_string('Angry', 'They Feel Angry or Frustrated'),
                       current_ts, current_ts
                   );
            insert into emoji (identifier, details, created_on, modified_on)
            values (
                       generate_uid('Emoji'),
                       create_versioned_string('Excited', 'They Feels Excited'),
                       current_ts, current_ts
                   );
            insert into emoji (identifier, details, created_on, modified_on)
            values (
                       generate_uid('Emoji'),
                       create_versioned_string('Thumbs Up', 'They Approve'),
                       current_ts, current_ts
                   );
            insert into emoji (identifier, details, created_on, modified_on)
            values (
                       generate_uid('Emoji'),
                       create_versioned_string('Thumbs Down', 'They Disapprove'),
                       current_ts, current_ts
                   );
            insert into emoji (identifier, details, created_on, modified_on)
            values (
                   generate_uid('Emoji'),
                   create_versioned_string('Thumbs Down', 'They Disapprove'),
                   current_ts, current_ts
               );

            -- Message Event
            insert into message_event (identifier, slug, details, created_on, modified_on)
            values (
                    generate_uid('Message.Event'),
                    'message',
                    create_versioned_string('Message', 'A message was sent'),
                    current_ts, current_ts
                   );
            -- Online Event
        insert into message_event (identifier, slug, details, created_on, modified_on)
        values (
                   generate_uid('Message.Event'),
                   'online',
                   create_versioned_string('Online', 'user online'),
                   current_ts, current_ts
               );
            -- Offline Event
        insert into message_event (identifier, slug, details, created_on, modified_on)
        values (
                   generate_uid('Message.Event'),
                   'offline',
                   create_versioned_string('Offline', 'user away'),
                   current_ts, current_ts
               );


            -- Channel
            insert into public.channel(identifier, slug, account, details, created_on, modified_on)
            values (
                       generate_uid('Account.Channel'),
                       'General',
                       account_identifier,
                       create_versioned_string('General', 'General Chat'),
                       current_ts, current_ts);

            insert into public.channel(identifier, slug, account, details, created_on, modified_on)
            values (
                       generate_uid('Account.Channel'),
                       'News',
                       account_identifier,
                       create_versioned_string('News', 'Events Chat'),
                       current_ts, current_ts);

        insert into public.channel(identifier, slug, account, details, created_on, modified_on)
        values (
                   generate_uid('Account.Channel'),
                   'Devs',
                   account_identifier,
                   create_versioned_string('Developer', 'Work Channel'),
                   current_ts, current_ts);


        FOR channel_identifier
            IN (SELECT identifier as channel_identifier FROM channel WHERE channel.account = account_identifier)
        LOOP
            FOR agent_identifier
                IN (SELECT identifier  as agent_identifier FROM account_agent WHERE account_agent.account = account_identifier)
            LOOP
                INSERT INTO channel_agent (channel, agent, created_on, modified_on)
                    VALUES (channel_identifier, agent_identifier, current_ts, current_ts);
                INSERT INTO channel_member (channel, member, created_on, modified_on)
                    VALUES (channel_identifier, agent_identifier, current_ts, current_ts);
            END LOOP;

            FOR agent_identifier
                    IN (SELECT "identifier"  as agent_identifier FROM account_member WHERE account_member.account = account_identifier)
                LOOP
                    INSERT INTO channel_member (channel, member, created_on, modified_on)
                    VALUES (channel_identifier, agent_identifier, current_ts, current_ts);
            END LOOP;
        END LOOP;

        END;
        $$ LANGUAGE plpgsql;
        </sql>
    </changeSet>


</databaseChangeLog>
