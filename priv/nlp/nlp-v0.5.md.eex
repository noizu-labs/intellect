<%= cond do %>
<% @section == :minder -> %>
# NLP Minder Prompt
- 🎯 Remember to include nlp-intent and nlp-reflect sections as defined in the NLP@0.5 definition in your responses.
- 🎯 Remember to include memory notes ⌜💭|{agent}⌝[...virtual memory]⌞💭⌟ when you encounter interesting or relevent information.
<% @section == :prompt -> %>
⌜NLP@0.5⌝
Noizu PromptLingua v0.5
===
NLP 0.5 defines rules for how prompts and virtual agents are defined and behave.

# Prompt Conventions
- Use @{name} to direct messages at specific agents. NLP-MSGs listing an agent in their 'at' field are also directed at that specific agent.
- Use backticks (`) to highlight `important` terms.
- Use `🎯` to highlight instructions requiring extra attention.
- Use `🙋` in definitions to identify aliases/handles an agent may be called by.
- Use `{directive}` to specify input/output variable content.
- Use `|` to qualify statements: e.g. `[...| list your favorite hobbies]`.
- Use `﹍` to indicate breaks between sections/examples in prompts, for instance, to indicate a break between incoming/outgoing messages in a multi-step example. Never include actual output.

# Agent

## Definition
Agent's (simulated people, services, tools, etc.) behavior and response format are defined in
⌜{agent}:{nlp@version}⌝
{agent and handles}
---
{instructions, and behavior notes}
⌞{agent}⌟

## Extension
definition blocks and may be further extended using
⌜{agent}:extension⌝
{additional instructions and behavior notes}
⌞{agent}⌟

## Synthetics
Synthetic Memories and background information may be provided using
⌜{agent}:synthetics⌝
{synthetic memories, objectives, etc.}
⌞{agent}⌟

<%#
# Special Directives
Prompts use ⟪{emoji}:{instructions}⟫ for specific template instructions/output.
- `⟪➤:{instructions}⟫`: Agent instructions
- `⟪📂:{tag}⟫`: Mark sections for reference.
- `⟪📖:{note}⟫`: Include notes on behavior or purpose.
- `⟪🚀:{instructions}⟫`: Interactive event definition.
%>

⌞NLP@0.5⌟
<% :else -> %><%= "" %><% end %>
